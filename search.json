[{"title":"2020年终总结暨2021新年计划","url":"/2022/01/01/2020%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%E6%9A%A82021%E6%96%B0%E5%B9%B4%E8%AE%A1%E5%88%92/","content":"\n  e965f997fa4cd2e85c00c4aaeb9a9d921c23f515f1159bce74eddf0c3fbed3a84a363e7ec52c9d8c6f1c5f32169823e3f7ec857ea26938322ef43cb2073eed4db95f9c20820b074ed084de5679a61a7429a1ce1368876e1e789078500a03ec9db22df4965b6de0b3d01ed2bbfccc2a30f64acabbac0423c327f4e9b44c778d0fc68973524a1c2ec0d963786e01de4c9898f885ee60516f26a1382195d21d96bc0b93db0039220d63cd0a7a69887974317eb07b81be3bee5677b66f00bbf033721106c38e75683e89f0356d41f589626c9fbebb5a09cd6623f4ab8779566be5943444937fbb75da1bd6e423e368ba8154e22bec2bfe6b1711422993cd534b4d79c3d98f36cb216cdf90911daf7e2112dede0c383857ebfb60bc0f862df554360f42c7b64c812e940e98cbbcbae09617f1f88170b1eab402c68dad722c1c159ae08024dc09dd984b6797b53c768d1b89496758346d2091842d797458776c023fbd6d0b2aa21f613c6f9fdd7b09f43b1de5f69daeab7d99811e7ac2c9452995ad7c86fba8d3e9a348934ec55fdea0568af4079d0f7948f59a020b4212511053e3d56aab3c85d75fd8fd0ce77e25cb321816668b887b4301a2bb83d8556fb3a86941bd33a3f3d424f5e3f9d02b75647ae0e75d25f13108240d842d0146af4aa171181b7537c5d9e5b5dac189cd24e269d9c0b3e56bc122de7648ee31c4019b4b80042ee06fa371c9f6a9f75108f87be4d9df6760e3c9c4ce211d230002d794a227f04ac92f2f09b8b5351457b53c29c64fde85cbd6175fde1a7414468b70fa9efdee6c099d2e441f003713e04c83db4c988c76afb8561bb03dc457cb358824b262593e5911e6591eae53c3984dfd90d9f64070590f7bafed5f24d02ad9123c0ec29a2ce63cac19600f6625673c6a897018f7e9a7f91aee77752e8090f4be93a8c6ef79a96574086549892f60d84f5fe656e8586a7bf59f40d47b4fab4b49e1e8ae3888c166e4926aab974e58aae9a977546ea8abd81e9b61d042f7a3ac25a1b38790cc41d19f7eb5ae5c975339e6d6db4ba6c6c6cbeea5e6e28c27e7824d2c7e9a9033781218f9f21eef4251feee0fded4158fa464fed3614615243cf05092231ae9190e66af81cf377c1a725c8b605a1b75dcc9e55f8212310a66f66552ce9954c2a3b95d1fd1e204524c66de16283bf93ce3c3647aa9fa9d2a29851118a589320e5b86a6b76e0dc52b879b39adeb5a95486085ea36222e0e46a093c43ce4cffa5a254d089bea18a4164723bdcb851ce9b20d7615c32f0ba8194610e7de98bc1f62910b87ad07c208d64e211b9aff58ffcf381f14e686da972a6e2f6258e53fa2b9b6a8258556f8e1429860e6474636ce1eecbf81b9abeabe9167ca2ecd3d158a72adc35aff3db72c367f946249e72e61133e855d97a864783cf94f8ebeefdd77da624ae93db0003c3d999d88df5c4ab6fada7e1d37f79d2928657891f92ab335fb9f944c41278f7577e11457b994b8c56d3a9bff248f35b56977d01bac1dc5ee9d2e74a182669769f633497551c923c6eb2fd65bcea78914858b6efb008b93adb7ac7ae67c077ba197751b8332fd2017e1dc12beb6aef53c3dc0cc15ca07d9d8a323e5c087da670f0c506490cc87f958e9d860d4e44ea2df73c19ed6861ace6d7a4e47863dd432a2e7e59b9a8b7cb1cad12754e00a5bbd06eacec6a863f96c1ba689dac622faac53c04b35095d40cd86917f32b295883214ca831d869c6dc6924afc90aac48235e0dfaea4084d7d6a21e3c5f6e664b5a57c4dffee65d4962d7946a50ca23bcd5f3a4b163028f772afd556f6649bcc67366d6ca0efaf0f030a2ec5981f3abb48a139298fe20ddb7e2c9d7306a5aaed73d8d89322337252e2d4158c62746c59b0a03ea9d45cd864a20714c834c1ba510fabb2c11446e995e26ab11781d8438e058d4e394436f053fd507eda671bfb3aef33bc734ab1039635361934269f32af9fd99d385fdd43afd74f2cea721e19cc942245e4ab095334fb909333cb1bc8f70289b627830464b019bb0981889946075e866654b8c5d5e28c2eaf1e4ac4cbb8e2af23e017d2d617c6ac486f6e4269e8ee8617fab3d8817fe5673147d65325ad187c237e79de26ec683192cdb89829afd7072cc45d480cef5dff4cdb5c4eeb6001f43ef804e7a6e12bb81b75d0bc0b9c53a1e2ccdbbe27b307eaca87df8bc3b7c917d49a68fcdc2621a9dca0b99aea3032e9b6da3881f29e70253f98ce94321e13b66ba6cb5cc538b5972e5c3d48db1cacbec87da374d8da89d69ebbdaa44044a326c9a34782a99db44de30da46491ed38b810fbb75d6a3fb352f5416b98be2caf333ccd22f4df156c225de7db73a9b0f70d392038ac72a0d7c67bbe3f4190e5a133c5dab42eaa300292eac1a088b2b9868f662590c13f57e72fac64d0983f3b98317e22a9ceb77ed3027bfb9999b9ae6d49c3d1d6380b771fe13a21703d80e5e99bcb53d48b5620e1f8ee231646123f06a1e8afae2aa494e530d6f730681cddd7bd8ea8f36fcf97a0ab2891a4786280fdc852731e534129b10a05aa7633ad2214706a4e88812e742d0b1a334762add63fb121d545371322f2b2368f192c9936b5df6b67d8558a5438bc2e0d6d739672c34b75f5e98f22dcc2a2cca06fe4e6e74a33166202975279fb72839ac328196999ccf13bad242ab27d90d59bee3cfc37f3e33814148bcb9e8983728514b968529382173c2ad0f475f136b374402d2740a1f31a14ba56e326e6d2be13bc656a334e7d170fe1833693b0ba0dfe4d8befff3f28858eebd41bc5cb9c82cc560018d51e9949c7e969ba4a210c5782df160da270c4987d0096af8303ab7c3877f99309d24ebf1bb9db55f14f4a0302fe0a0f6fdce3090e4572cd4495d12ca7387ce1221e0a8c5ccc6da6ca29b16551f4120d434e164f4df46fa4fded426edf612837bda290568f533f752d7cdf8a73f58a4848d6471bd3ac17fb65542c44b77f9b868f91257b4ef8a9a83921fe36a11bd6c6086fec7d643b9b66d82fc55fb9104a27d114d00d03de1276249984c3e82f86ed385a7d27cbca85442cf32f585c666d56c18a90b5f9a92cf2d6a48361643aae704aee2b4b353994d35dfe3db54b611072a59f13a24bb6b780155189e3b8a1d9313aaeaea02debfdd449407c9f3a0d5275c2e36c920147ba69515e3db24aa3a0f0a195b87266af17b7cb254559b9689c092178064784c5dfd0f2aa1fd23e99f7d11ed2c8f07ba86b22f225d7bf6949158a842b7951bbd71c8114912cb207c598becfc51de8b2fa7194225d0a28189df3163bbc9bf6e067981a634b93f9b5e47d6a8c347b306f57e55930c9c2653348a94931623b35428e2b420b5748474bf7df421504c2b47cbe2c0f9195bd71638fc07cad509e6d9fb7346e7fb3f3bed8a9a9730ae8a6f9e0f14b2aa441e3a36da3f0c5ee2979bdf98d1c7f6f6ffb37b3d13659c9342d74e9f2177648387e5da6895c21f0991a8621b6b5890e21aba8c80e44cccc13b389b51d2fded86f6a5800cceb350d81202070511cf75d7b53f158100a53672967b3637339d3157dea0f5f7aa7ecdf9e146e8b46767ee885ba0728648c89cb0f8e9f6e1e80054fc380119822ea1a4fa32391d0e4c9da8a8f6948cfb74819cfc9d21eca83c00d37a7f46fdfd6ac8857a9eb48314a5b31c9e2eb32ae4590fbd15598748d72c840e0c81c5f5c2164f6a9aec97264a7827dca1e582e14080d321a842638fe64727e26c4fe86e22acc5a91650a27957155de14c1f81e835f3b6207dac2bb5d88734da1b452495105f5e2fecb3dd8ff0ae825891a17f1cfa372c28af688431678dda48c6ddfdec1ba68f9f4fb7577dc2199d73e2ae865b2e174e7e21afd4b4bbed83385134c2c5f9aa12107cd93312cdfe84470a8198cca8c5eb5ef56504877fd351867c8178e2d56ce8f6277ab7b3986b1970fc7a2ec55e662a96cbfba030f2014cd9c5c9319a74462f827a7c92179ff077c0887bd714b7414e4246a5f7248a159a733cad326317a961ff6b1eeaa4481e59f30554162c4a3daea5e34648b0d4df59ef45caf06e2599ef3ab0e2d5e15a3ee4c7d35e66d4cc6b53348a8e22581cf138a61cd431b4979fad856e6dc032482dbf33b37d060e14519ba596eb92f871e30e1365c45fd081d1dafdf074c1833f02c18011c0b863a257c9a7e31d02a0449ce4e7107f5681df18dc153aaa3e328aaa231a6a5ab8a1475ddfaa60fad9bf139a801cba7dc774d9df256d652bba71bfa5146aa88243d417f94e1eac6a80d2383bd6c3c94dcd955db2095ea954de23a554cc9b967c0e19c360f94f875d44a7a477a5f17173935653f14c85d106c99c866f32757eb079776aec9b9a11eb089ef074d5239db9d0e4faa72329db7b4dde9c27fd828982634c934a383380c96449ca8cd371ded62591d57a9cfa58a1124d38ac169921a747832a63b7ba9072176691a05cb6520cbfd84d035b3154f796c9f6550b80df7b96df6df309349327d58791dc71a840c8c6cbd1d424542bc729f92dc005a50bd84bca52467f4b07dcdbd862922e19e13b88b74aa67dbd51f9007c6c1a358d9dbd11222948ea83ddee5b864a12f61b15d6ff5c2f4f93482bd34857a00df2fdfa2eed17894f307999b9de80174cebd13d12a2f86a84ee42d95de39747315794b084233870ea6ffbad0537f9cb7897dbfb1255df1d180e66492c34f952bed1c33163f7e42548dcb802c4db76400ed96389a885ee06fffe25852dcdbbd0f3943ae9d12fddea24e42ffec7bf19f37971d173b1f657a0986c85c57bda2d4edabb951e195d731e2212c5d9b550a9838ec94c3ab406f3aacb5cdadeb0b4dfadc2d79474eab781798a75a7f800f332855b5334f939c075f69382e36c5a50c6cb85645b9173f38f3f15d9b975f732d10ee636e70ec8a6dcb3394ff4c7de964511c83fba7c3f170e6b322eccb49406c76a2fb871d04a90d3884f7b7db2ea6636178f8574c6c76fb43e14b053fff7df73ceb309a10cd251ebf46965e96c4cd69f7dbc7acdb1c53ddb4392d61954802f60defcb86363fa8557c07048212a1f159004bb7bddc43dfdade7e6743d024fe19583f34dcf7536b39114ad2f00a705c2c98d0075497f260ced32dad761ff77a3cd03a93f986ff7ee37bbac562588c5fd848a0d9987d4abc3248fe07ac5900be9842d546393fc1a90066\n  \n    \n      \n      \n        您好, 这里禁止通行!!\n      \n    \n  \n\n","categories":["life"],"tags":["private"]},{"title":"windows下使用cmd查找文件","url":"/2022/01/01/windows%E4%B8%8B%E4%BD%BF%E7%94%A8cmd%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6/","content":"windows下使用cmd查找文件今天有个文件找不着了，只记得部分文件名称，通过文件管理器查询太慢了，就找了一下通过命令行的方式来查询，命令如下：\nfor /r C:/ %i in (*文件名*) do @echo %i\n\n特此记录一下，以备后用。\n","categories":["随笔"],"tags":["windows"]},{"title":"MySQL触发器设置ID值默认为UUID","url":"/2022/01/01/MySQL%E8%A7%A6%E5%8F%91%E5%99%A8%E5%9C%A8%E8%AE%BE%E7%BD%AEID%E5%80%BC%E9%BB%98%E8%AE%A4%E4%B8%BAUUID/","content":"MySQL触发器设置ID值默认为UUID触发器写法CREATE TRIGGER `table_name` BEFORE INSERT ON `table_name` FOR EACH ROWBEGINIF new.id is NULL THEN        SET new.id = replace(UUID(),&#x27;-&#x27;,&#x27;&#x27;);END IF;END;","categories":["随笔"],"tags":["MySQL"]},{"title":"整合spring boot admin ，监控出现Redis指标异常","url":"/2022/01/01/%E6%95%B4%E5%90%88spring-boot-admin-%EF%BC%8C%E7%9B%91%E6%8E%A7%E5%87%BA%E7%8E%B0Redis%E6%8C%87%E6%A0%87%E5%BC%82%E5%B8%B8/","content":"整合spring boot admin ，后台管理监控出现Redis指标异常 错误信息如下：\n​error   org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379​\n\n起初认为是redisIP在配置中的错误，排查配置发现没有问题，postman测试接口发现redis连接正常，一顿百度过后发现，spring boot admin 默认检测微服务中的所有指标信息，包括redis，如果配置文件中没有设置，则会根据默认的localhost配置去尝试连接redis，因此导致指标异常，如果当前微服务不需要连接redis，可以在yml配置文件中关闭这项指标的检测。如下：\nmanagement:  health:    redis:      enabled: false​\n重启服务后，可见指标被移除，服务监测页面显示正常。\n","categories":["随笔"],"tags":["springBootAdmin"]},{"title":"使用velocity模板引擎生成代码格式不对的问题","url":"/2022/01/01/%E4%BD%BF%E7%94%A8velocity%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E4%B8%8D%E5%AF%B9%E7%9A%84%E9%97%AE%E9%A2%98/","content":"使用velocity模板引擎生成代码格式不对的问题起因模板代码块如下所示：\n## ----------  BEGIN 字段循环遍历  ----------#foreach($field in $&#123;table.fields&#125;)    #if($&#123;field.keyFlag&#125;)        #set($keyPropertyName=$&#123;field.propertyName&#125;)    #end    #if(&quot;$!field.comment&quot; != &quot;&quot;)    /**     * $&#123;field.comment&#125;     */    #end    @ApiModelProperty(name = &quot;$&#123;field.propertyName&#125;&quot;, value = &quot;$&#123;field.comment&#125;&quot;,             dataType = &quot;$&#123;field.propertyType&#125;&quot;)    #if($&#123;field.keyFlag&#125;)    ## 主键    @TableId(value = &quot;$&#123;field.name&#125;&quot;, type = IdType.UUID)    #elseif($&#123;field.fill&#125;)    ## 普通字段    ## -----   存在字段填充设置   -----    @TableField(value = &quot;$&#123;field.name&#125;&quot;, fill = FieldFill.$&#123;field.fill&#125;)    #elseif($&#123;field.name&#125;==&quot;tenantId&quot;)    @TableField(value = &quot;$&#123;field.name&#125;&quot;, exist=false)    #elseif($&#123;field.convert&#125;)    @TableField(&quot;$&#123;field.name&#125;&quot;)    #end    ## 乐观锁注解    #if($&#123;versionFieldName&#125;==$&#123;field.name&#125;)    @Version    #end    ## 逻辑删除注解    #if($&#123;logicDeleteFieldName&#125;==$&#123;field.name&#125;)    @TableLogic    #end    private $&#123;field.propertyType&#125; $&#123;field.propertyName&#125;;#end## ----------  END 字段循环遍历  ----------\n\n生成代码如下所示：\n/** * 角色ID */@ApiModelProperty(name = &quot;roleId&quot;, value = &quot;角色ID&quot;, dataType = &quot;Long&quot;)    @TableId(value = &quot;ROLE_ID&quot;, type = IdType.UUID)        private Long roleId;/** * 角色名称 */@ApiModelProperty(name = &quot;roleName&quot;, value = &quot;角色名称&quot;, dataType = &quot;String&quot;)    @TableField(&quot;ROLE_NAME&quot;)    private String roleName;/** * 角色描述 */@ApiModelProperty(name = &quot;remark&quot;, value = &quot;角色描述&quot;, dataType = &quot;String&quot;)    @TableField(&quot;REMARK&quot;)    private String remark;/** * 创建时间 */@ApiModelProperty(name = &quot;createTime&quot;, value = &quot;创建时间&quot;, dataType = &quot;LocalDateTime&quot;)    @TableField(&quot;CREATE_TIME&quot;)    private LocalDateTime createTime;/** * 修改时间 */@ApiModelProperty(name = &quot;modifyTime&quot;, value = &quot;修改时间&quot;, dataType = &quot;LocalDateTime&quot;)    @TableField(&quot;MODIFY_TIME&quot;)    private LocalDateTime modifyTime;\n\n可见缩进格式完全混乱，不利于阅读。\n原因是因为velocity把空格缩进原封输出到代码格式中，因此模板中的脚本命令需要顶格编写，虽然影响可读性，但能保证生成代码的格式，另外这个顶格编写的命令，是包括注释关键字在内的。\n修改后的模板文件如下：\n​## ----------  BEGIN 字段循环遍历  ----------#foreach($field in $&#123;table.fields&#125;)#if($&#123;field.keyFlag&#125;)#set($keyPropertyName=$&#123;field.propertyName&#125;)#end#if(&quot;$!field.comment&quot; != &quot;&quot;)    /**     * $&#123;field.comment&#125;     */#end    @ApiModelProperty(name = &quot;$&#123;field.propertyName&#125;&quot;, value = &quot;$&#123;field.comment&#125;&quot;, dataType = &quot;$&#123;field.propertyType&#125;&quot;)#if($&#123;field.keyFlag&#125;)## 主键    @TableId(value = &quot;$&#123;field.name&#125;&quot;, type = IdType.UUID)#elseif($&#123;field.fill&#125;)## 普通字段## -----   存在字段填充设置   -----    @TableField(value = &quot;$&#123;field.name&#125;&quot;, fill = FieldFill.$&#123;field.fill&#125;)#elseif($&#123;field.name&#125;==&quot;tenantId&quot;)    @TableField(value = &quot;$&#123;field.name&#125;&quot;, exist=false)#elseif($&#123;field.convert&#125;)    @TableField(&quot;$&#123;field.name&#125;&quot;)#end## 乐观锁注解#if($&#123;versionFieldName&#125;==$&#123;field.name&#125;)    @Version#end## 逻辑删除注解#if($&#123;logicDeleteFieldName&#125;==$&#123;field.name&#125;)    @TableLogic#end    private $&#123;field.propertyType&#125; $&#123;field.propertyName&#125;;#end## ----------  END 字段循环遍历  ----------​\n\n注意：使用velocity模板时，空行也可能导致不必要的缩进。\n","categories":["随笔"],"tags":["velocity","MyBatis-plus"]},{"title":"面试杂记","url":"/2022/01/01/%E9%9D%A2%E8%AF%95%E6%9D%82%E8%AE%B0/","content":"面试杂记20211030\neureka是怎么实现服务发现与注册的？ \n注册中心维护一个注册表。\n服务启动后，向注册表写入地址进行注册，关闭则从注册表中删除。\n服务与注册中心保持心跳联系。\n\n\nredis的线程模型是什么样的？\nredis使用I/O多路复用程序来同时监听多个套接字，并根据套接字目前执行任务来关联不同的事件处理器。\n当被监听的套接字准备好执行连接应答、读取、写入、关闭等操作时，与操作相对应的文件事件就会产生，这时文件事件处理器就会调用套接字之前关联好的事件处理器来处理这些事件。\n文件事件处理器以单线程方式运行，但通过I/O多路复用程序来监听多个套接字，文件事件处理器既实现了高性能的网络通信模型，又可以很好地与redis服务器中其他同样以单线程方式运行的模块对接。个人的理解：redis的线程模型类似dispatchServlet，所有准备好套接字像请求一样进入I/O多路复用程序，然后顺序进入队列，事件分派器顺序读取队列，并根据处理类型分派到不同的处理器进行处理。\n\n\n\n","categories":["面试"],"tags":["eureka","redis"]}]